from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import InputFile

from components import database as db
from components import keyboards as kb
from modules import botStages

import random
import string


async def personal_account(message: types.Message):
    pool = await message.bot.get('pg_pool')
    personal_account_data = await db.personal_account(pool, message.from_user.id)
    await message.answer(
        f'{personal_account_data[0]}, —ç—Ç–æ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!\n\n'
        f'–ù–æ–º–µ—Ä–∞ –≤–∞—à–∏—Ö —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö –±–∏–ª–µ—Ç–∏–∫–æ–≤:\n'
        f'{personal_account_data[1]}\n'
        f'–°–ª–µ–¥–∏ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤ –≥—Ä—É–ø–ø–µ @yarkostorganic !'
    )


async def additional_play(message: types.Message,  state: FSMContext):
    await message.bot.send_photo(
        message.chat.id,
        photo=InputFile('photos/marketplaces.jpg'),
        caption=f'üíñ –û—Å—Ç–∞–≤—å—Ç–µ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–∑—ã–≤ –æ —Å–ø—Ä–µ–π-–≥–∏–¥—Ä–æ–ª–∞—Ç –æ—Ç YARKOST\n'
                f'üìé–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∑–¥–µ—Å—å 2 —Å–∫—Ä–∏–Ω–∞:\n'
                f'—á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –∏ –æ—Ç–∑—ã–≤ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º —Ç–æ–≤–∞—Ä–∞, –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å —Å–∫—Ä–µ–ø–∫–æ–π –æ–∫–æ–ª–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.',
    )
    await botStages.Screenplay.advanced_photo.set()
    await additional_photo(message, state)


async def dont_added_photo(message: types.Message):
    await message.answer(
        f'–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...üòë'
    )


async def additional_photo(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['photo'] = message.photo[0].file_id
    await botStages.Screenplay.next()
    await additional_lucky_ticket(message, state)


async def additional_lucky_ticket(message: types.Message, state: FSMContext):
    pool = await message.bot.get('pg_pool')
    await message.answer(
        f'–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–µ–∫—É–Ω–¥–æ—á–∫—É...'
    )
    random_string = ''.join(random.choices(string.ascii_letters + string.digits, k=10))
    await message.answer(
        f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤–∞—à –æ—Ç–∑—ã–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n'
        f'–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ –∫—É–ø–æ–Ω–∞: {random_string}'
    )
    async with state.proxy() as data:
        data['lucky_ticket'] = random_string
    await db.additional_item(pool, state, message.from_user.id)
    await botStages.Screenplay.advanced.set()
    await advanced_stage(message)


async def advanced_stage(message: types.Message):
    await botStages.Screenplay.advanced.set()
    await message.bot.send_photo(
        message.chat.id,
        photo=InputFile('photos/marketplaces.jpg'),
        caption=(
            f'–ë–æ–ª—å—à–µ –ø–æ–∫—É–ø–æ–∫ - –±–æ–ª—å—à–µ —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑! –ü–æ–ª—É—á–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫—É–ø–æ–Ω –∑–∞ –Ω–æ–≤—É—é –ø–æ–∫—É–ø–∫—É:\n'
            f'1. –ü–æ–∫—É–ø–∞–π—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ YARKOST\n'
            f'2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫—É –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞ –∫–∞–∂–¥—É—é —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –∫—É–ø–æ–Ω'),
        reply_markup=kb.marketsInline,
    )
    await message.answer(
        f'–ó–∞–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç –∏–ª–∏ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –ø–æ–∫—É–ø–∫—É!',
        reply_markup=kb.lkKeyboard
    )


def register_advanced_handlers(dp: Dispatcher):
    dp.register_message_handler(personal_account, state=botStages.Screenplay.advanced, text=['–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'])
    dp.register_message_handler(additional_play, state=botStages.Screenplay.advanced, text=['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫—É–ø–æ–Ω'])
    dp.register_message_handler(dont_added_photo, state=botStages.Screenplay.advanced_photo)
    dp.register_message_handler(additional_photo, state=botStages.Screenplay.advanced_photo, content_types=['photo'])
    dp.register_message_handler(additional_lucky_ticket, state=botStages.Screenplay.advanced_lucky_ticket)
    dp.register_message_handler(advanced_stage, state=botStages.Screenplay.advanced)
